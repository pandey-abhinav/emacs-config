* initial settings
#+BEGIN_SRC elisp
  (setq user-full-name "Abhinav Pandey"
        user-mail-address "abhinav.predicate@gmail.com")


  (setq inhibit-startup-screen t)

  (setq-default truncate-lines t
			    tab-width 4
			    indent-tabs-mode nil)

  (blink-cursor-mode 0)
  (column-number-mode t)
  (line-number-mode t)
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (toggle-scroll-bar -1)
#+END_SRC

* package management
** required packages
#+BEGIN_SRC elisp
  (require 'auto-complete-config)
  (require 'all-the-icons)
  (require 'cl-lib)
  (require 'indent-guide)
  (require 'go-eldoc)
  (require 'go-autocomplete)
  (require 'elpy)
  (require 'helm)
  (require 'helm-config)
  (require 'helm-projectile)
  (require 'jedi)
  (require 'ledger-mode)
  (require 'package)
  (require 'paren)
  (require 'popwin)
  (require 'neotree)
  (require 'nlinum)
  (require 'thrift-mode)
  (require 'org-bullets)
  (require 'web-mode)
  (require 'yaml-mode)
#+END_SRC
** package archives
#+BEGIN_SRC elisp
  (add-to-list 'load-path "~/.emacs.d/packages/")

  (add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
  (add-to-list 'package-archives '("elpy" . "https://jorgenschaefer.github.io/packages/"))

  (package-initialize)
#+END_SRC

* Key bindings
** mac key bindings
#+BEGIN_SRC elisp
  (setq mac-command-modifier 'meta
        mac-option-modifier 'super
        mac-control-modifier 'control
        ns-function-modifier 'hyper)
#+END_SRC
** global key bindings
#+BEGIN_SRC elisp
  (global-set-key (kbd "C-c c") 'comment-region)
  (global-set-key (kbd "C-c u") 'uncomment-region)
  (global-set-key (kbd "M-n") (lambda () (interactive) (forward-line 5)))
  (global-set-key (kbd "M-p") (lambda () (interactive) (forward-line -5)))
  (global-set-key (kbd "C-q") (lambda () (interactive) (toggle-read-only)))
  (global-set-key (kbd "M-d") (lambda () (interactive) (delete-backward-char 1)))
  (global-set-key (kbd "C-c n") 'neotree-toggle)
  (global-set-key [wheel-left] 'do-nothing)
  (global-set-key [wheel-right] 'do-nothing)
  (global-set-key [double-wheel-left] 'do-nothing)
  (global-set-key [double-wheel-right] 'do-nothing)
  (global-set-key [triple-wheel-left] 'do-nothing)
  (global-set-key [triple-wheel-right] 'do-nothing)
#+END_SRC

* display
** face
#+BEGIN_SRC elisp
  ;; (set-face-attribute 'font-lock-type-face nil :weight 'bold)
  ;; (set-face-attribute 'font-lock-keyword-face nil :weight 'bold)
  (set-face-attribute 'font-lock-function-name-face nil :weight 'bold)
  (set-face-attribute 'font-lock-variable-name-face nil :foreground "orange")
  (set-face-attribute 'font-lock-constant-face nil :foreground "#e23860")
  (set-face-attribute 'font-lock-string-face nil :foreground "sienna" :slant 'italic)
  (set-face-attribute 'font-lock-comment-face nil :foreground "#aaaaaa" :slant 'oblique)
  (set-face-attribute 'font-lock-doc-face nil :foreground "#aaaaaa" :slant 'italic)
  (set-face-attribute 'font-lock-builtin-face nil :foreground "#00b3b3")
  (set-face-attribute 'show-paren-match nil :weight 'extra-bold :foreground "grey" :background "red")
#+END_SRC

* modes
** choose mode based on file extension
*** ledger mode
#+BEGIN_SRC elisp
  (add-to-list 'auto-mode-alist '(".ledger$" . ledger-mode))
#+END_SRC
*** rjsx mode
#+BEGIN_SRC elisp
  (add-to-list 'auto-mode-alist '(".js$" . rjsx-mode))
#+END_SRC
*** web mode
#+BEGIN_SRC elisp
  (add-to-list 'auto-mode-alist '(".html$" . web-mode))
  (add-to-list 'auto-mode-alist '(".djhtml$" . web-mode))
  (add-to-list 'auto-mode-alist '(".phtml$" . web-mode))
  (add-to-list 'auto-mode-alist '(".css$" . web-mode))
  (add-to-list 'auto-mode-alist '(".scss$" . web-mode))
#+END_SRC
*** asm86 mode
#+BEGIN_SRC elisp
  (add-to-list 'auto-mode-alist '(".asm$" . asm86-mode))
#+END_SRC
*** yaml mode
#+BEGIN_SRC elisp
  (add-to-list 'auto-mode-alist '(".yml$" . yaml-mode))
#+END_SRC











